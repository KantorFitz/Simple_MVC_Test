// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SzkolenieTechniczne.Projekt.Cimena.Infrastructure;

#nullable disable

namespace SzkolenieTechniczne.Projekt.Cimena.Infrastructure.Migrations
{
    [DbContext(typeof(CinemaTicketDbContext))]
    [Migration("20220618162812_AddedToTableInconfigurations")]
    partial class AddedToTableInconfigurations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeanceTime")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("045173b2-5066-43e4-a3d1-c24f4b1e0dc6"),
                            Name = "Harry",
                            SeanceTime = 150,
                            Year = 2010
                        },
                        new
                        {
                            Id = new Guid("682f6c81-2f95-4d49-84fd-925f2b26e4e6"),
                            Name = "Garry",
                            SeanceTime = 150,
                            Year = 2010
                        },
                        new
                        {
                            Id = new Guid("6529baea-e7be-4198-87a0-f653706327ce"),
                            Name = "Lolita",
                            SeanceTime = 150,
                            Year = 2010
                        });
                });

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Seance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Seances", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee12c596-8bdd-4458-86b3-cbc3ffd605f5"),
                            Date = new DateTime(2019, 3, 10, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("045173b2-5066-43e4-a3d1-c24f4b1e0dc6")
                        },
                        new
                        {
                            Id = new Guid("0d7fa239-28c3-462e-825f-d049d99b10d2"),
                            Date = new DateTime(2019, 3, 10, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("682f6c81-2f95-4d49-84fd-925f2b26e4e6")
                        },
                        new
                        {
                            Id = new Guid("f3e7390e-9a73-4df8-a9d0-767cd6bd8ebe"),
                            Date = new DateTime(2019, 3, 10, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("6529baea-e7be-4198-87a0-f653706327ce")
                        });
                });

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchasesDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SeanceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SeanceId");

                    b.ToTable("Tickets", (string)null);
                });

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Seance", b =>
                {
                    b.HasOne("SzkolenieTechniczne.Projekt.Domain.Entities.Movie", null)
                        .WithMany("Seances")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("SzkolenieTechniczne.Projekt.Domain.Entities.Seance", null)
                        .WithMany("Tickets")
                        .HasForeignKey("SeanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Movie", b =>
                {
                    b.Navigation("Seances");
                });

            modelBuilder.Entity("SzkolenieTechniczne.Projekt.Domain.Entities.Seance", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
